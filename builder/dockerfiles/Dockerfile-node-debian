ARG from
FROM ${from} as node-base
LABEL org.opencontainers.image.authors="armando.ucf@gmail.com"

ARG uname=ezdev

ENV DEBIAN_FRONTEND=noninteractive
#ENV TZ=UTC
#RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

SHELL ["/bin/bash", "-c"]

USER root

COPY container-scripts/entrypoint.d/ezdev/40-node.sh /opt/container-scripts/entrypoint.d/ezdev/

FROM node-base as node-build

ENV NODE_VERSION 21.7.1

RUN apt-get -q update \ 
    && apt-get -qq install -y --no-install-recommends \
      curl gnupg2 ca-certificates xz-utils \
  && mkdir /opt/node \
  && ARCH= && dpkgArch="$(dpkg --print-architecture)" \
  && case "${dpkgArch##*-}" in \
    amd64) ARCH='x64';; \
    ppc64el) ARCH='ppc64le';; \
    s390x) ARCH='s390x';; \
    arm64) ARCH='arm64';; \
    armhf) ARCH='armv7l';; \
    i386) ARCH='x86';; \
    *) echo "unsupported architecture"; exit 1 ;; \
  esac \
  # use pre-existing gpg directory, see https://github.com/nodejs/docker-node/pull/1895#issuecomment-1550389150
  && export GNUPGHOME="$(mktemp -d)" \
  # gpg keys listed at https://github.com/nodejs/node#release-keys
  && set -ex \
  && for key in \
    4ED778F539E3634C779C87C6D7062848A1AB005C \
    141F07595B7B3FFE74309A937405533BE57C7D57 \
    74F12602B6F1C4E913FAA37AD3A89613643B6201 \
    DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7 \
    61FC681DFB92A079F1685E77973F295594EC4689 \
    8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \
    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
    890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4 \
    C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C \
    108F52B48DB57BB0CC439B2997B01419BD92F80A \
    A363A499291CBBC940DD62E41F10027AF002F8B0 \
  ; do \
      gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys "$key" || \
      gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key" ; \
  done \
  && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz" \
  && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc" \
  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \
  && gpgconf --kill all \
  && rm -rf "$GNUPGHOME" \
  && grep " node-v$NODE_VERSION-linux-$ARCH.tar.xz\$" SHASUMS256.txt | sha256sum -c - \
  && tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /opt/node --strip-components=1 --no-same-owner \
  && rm "node-v$NODE_VERSION-linux-$ARCH.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt \
    && ln -s /opt/node/bin/* /usr/local/bin \
    && ln -s /opt/node/bin/node /usr/local/bin/nodejs \
    && corepack enable \
    # smoke tests
    && for i in node npm npx pnpm yarn yarnpkg; do echo ${i}:`${i} --version`; done
    #&& node --version && npm --version && npx --version && pnpm --version && pnpx --version && yarn --version && yarnpkg --version 

FROM node-base as node-dev

COPY --from=node-build /opt/node /opt/node
#COPY --from=base-with-nodejs /opt/yarn /opt/yarn

# smoke tests
RUN ln -s /opt/node/bin/* /usr/local/bin \
    && ln -s /opt/node/bin/node /usr/local/bin/nodejs \
    && corepack enable
    # && for i in node npm npx pnpm yarn yarnpkg; do echo ${i}:`${i} --version`; done
    #&& node --version && npm --version && npx --version && pnpm --version\
    #&& ln -s /opt/yarn/bin/yarn /usr/local/bin/yarn \
    #&& ln -s /opt/yarn/bin/yarnpkg /usr/local/bin/yarnpkg \
    #&& yarn --version

USER ${uname}
WORKDIR /home/${uname}
RUN SHELL='bash' pnpm setup
ENV PNPM_HOME="/home/${uname}/.local/share/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
#RUN pnpm install -g syncpack depcheck

USER root

FROM node-dev as node-qa

SHELL ["/bin/bash", "-c"]

USER root

RUN apt-get -q update \
  && apt-get -qq install -y --no-install-recommends \
  libgtk2.0-0 \
  libgtk-3-0 \
  libgbm-dev \
  libnotify-dev \
  libnss3 \
  libxss1 \
  libasound2 \
  libxtst6 \
  xauth \
  xvfb \
  wget curl gnupg2 ca-certificates xz-utils \
  # browsers dependencies
  fonts-liberation \
  libvulkan1 \
  xdg-utils \
  # chrome dependencies
  libu2f-udev \
  # firefox dependencies
  bzip2 \
  libdbus-glib-1-2 \
  # add codecs needed for video playback in firefox
  # https://github.com/cypress-io/cypress-docker-images/issues/150
  mplayer \
  && apt-get -q autoremove --purge && apt-get -q clean && rm -rf /var/lib/apt/lists/* \
  && rm -rf /usr/share/doc/ && rm -rf /usr/share/man/ && rm -rf /usr/share/locale/

# install libappindicator3-1 - not included with Debian 11
RUN wget --no-verbose /usr/src/libappindicator3-1_0.4.92-7_amd64.deb "http://ftp.us.debian.org/debian/pool/main/liba/libappindicator/libappindicator3-1_0.4.92-7_amd64.deb" && \
  dpkg -i /usr/src/libappindicator3-1_0.4.92-7_amd64.deb ; \
  apt-get install -f -y && \
  rm -f /usr/src/libappindicator3-1_0.4.92-7_amd64.deb

# install Chrome browser
RUN node -p "process.arch === 'arm64' ? 'Not downloading Chrome since we are on arm64: https://crbug.com/677140' : process.exit(1)" || \
  (wget --no-verbose -O /tmp/google-chrome-stable_current_amd64.deb "http://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_120.0.6099.224-1_amd64.deb" && \
  dpkg -i /tmp/google-chrome-stable_current_amd64.deb && \
  apt-get install -f -y && \
  rm -f /tmp/google-chrome-stable_current_amd64.deb)

# "fake" dbus address to prevent errors
# https://github.com/SeleniumHQ/docker-selenium/issues/87
ENV DBUS_SESSION_BUS_ADDRESS=/dev/null

# install Firefox browser
RUN node -p "process.arch === 'arm64' ? 'Not downloading Firefox since we are on arm64: https://bugzilla.mozilla.org/show_bug.cgi?id=1678342' : process.exit(1)" || \
  (wget --no-verbose -O /tmp/firefox.tar.bz2 https://download-installer.cdn.mozilla.net/pub/firefox/releases/115.0.1/linux-x86_64/en-US/firefox-115.0.1.tar.bz2 && \
  tar -C /opt -xjf /tmp/firefox.tar.bz2 && \
  rm /tmp/firefox.tar.bz2 && \
  ln -fs /opt/firefox/firefox /usr/bin/firefox)

# install latest Edge
RUN node -p "process.arch === 'arm64' ? 'Not downloading Edge since we are on arm64: https://techcommunity.microsoft.com/t5/discussions/edge-for-linux-arm64/m-p/1532272' : process.exit(1)" || \
  (curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg && \
  install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/ && \
  sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main" > /etc/apt/sources.list.d/microsoft-edge-dev.list' && \
  rm microsoft.gpg && \
  ## Install Edge
  apt-get update && \
  apt-get install -y microsoft-edge-dev && \
  ## Add a link to the browser that allows Cypress to find it
  ln -s /usr/bin/microsoft-edge /usr/bin/edge)

USER ${uname}
WORKDIR /home/${uname}

ENV PNPM_HOME="/home/${uname}/.local/share/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN pnpm install -g cypress@12.3.0

#RUN export SHELL=bash && pnpm setup 

