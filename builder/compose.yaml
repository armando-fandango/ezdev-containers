##### builder

x-alpine-image: &alpine-image
    alpine:3.19.1  

x-debian-image: &debian-image
    debian:12.5-slim 

x-ubuntu-image: &ubuntu-image
    ubuntu:22.04   

x-base-ubuntu-dev-image: &base-ubuntu-dev-image
    ghcr.io/armando-fandango/ezdev:0.15-base-ubuntu-dev

x-base-debian-dev-image: &base-debian-dev-image
    ghcr.io/armando-fandango/ezdev:0.15-base-debian-dev

x-base-alpine-dev-image: &base-alpine-dev-image
    ghcr.io/armando-fandango/ezdev:0.15-base-alpine-dev

x-base-alpine-prod-image: &base-alpine-prod-image
    ghcr.io/armando-fandango/ezdev:0.15-base-alpine-prod

x-py-command: &py-command
  command: bash -c 
          "cat /etc/os-release | grep PRETTY_NAME | cut -d'=' -f2;  
          echo `which python` `python -V`;
          echo `which jupyter-lab` `jupyter-lab -V`;
          echo torch=`python -c 'import torch; print(torch.__version__)'`, with cuda=`python -c 'import torch; torch.cuda.is_available()'`;
          "

x-conda-command: &conda-command
  command: bash -c 
          "cat /etc/os-release | grep PRETTY_NAME | cut -d'=' -f2;  
          echo `which python` `python -V`;
          echo `which conda` `conda -V`;
          echo `which mamba` `mamba -V`;"

x-wait-command: &wait-command
  command: bash -c 
          "while sleep 1000; do :; done;"

x-common: &common
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - .:/workspace
      - /data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /workspace
    env_file: .env
    user: ezdev:ezdev

services:

# DUID=`id -u` DGID=`id -g` docker compose build fixid
#  fixid:
#    image: *img
#    build: 
#      context: .
#      dockerfile: dockerfiles/Dockerfile-fixid
#      args: 
#        image: *img
#        duid: ${DUID:-9000}
#        dgid: ${DGID:-9000}

##### Base images

  base-ubuntu-dev:
    image: *base-ubuntu-dev-image
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-base-debian
      target: base-dev
      args:
        from: *ubuntu-image

  base-debian-dev:
    <<: [*common]
    image: *base-debian-dev-image
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-base-debian
      #tags: 
      #  - ${CONTAINER_REPO}/ezdev:0.8-base-debian-dev
      target: base-dev
      args:
        from: *debian-image
  
  base-alpine-dev:
    image: *base-alpine-dev-image
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-base-alpine
      #tags: 
      #  - ${CONTAINER_REPO}/ezdev:0.8-base-alpine-dev
      target: base-dev
      args:
        from: *alpine-image

  base-alpine-prod:
    image: *base-alpine-prod-image
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-base-alpine
      #tags: 
      #  - ${CONTAINER_REPO}/ezdev:0.8-base-alpine-dev
      target: base-prod
      args:
        from: *alpine-image

##### Web images

  nginx-alpine-prod:
    image: ghcr.io/armando-fandango/ezdev:0.13-nginx-alpine-prod
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-nginx-alpine
      #tags: 
      #  - ${CONTAINER_REPO}/ezdev:0.8-node-debian-dev
      args:
        from: nginxinc/nginx-unprivileged:1.25-alpine-slim
      target: nginx-prod

  certbot-alpine-prod:
    image: ghcr.io/armando-fandango/ezdev:0.16-certbot-alpine-prod
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-certbot-alpine
      #tags: 
      #  - ${CONTAINER_REPO}/ezdev:0.8-node-debian-dev
      args:
        from: *base-alpine-prod-image
      target: certbot-prod

  php-alpine-dev:
    image: ghcr.io/armando-fandango/ezdev-php:1.0.1-alpine-dev
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-php-alpine
      #tags: 
      #  - ${CONTAINER_REPO}/ezdev:0.8-node-debian-dev
      args:
        from: *base-alpine-dev-image
      target: php-dev

  php-alpine-prod:
    image: ghcr.io/armando-fandango/ezdev-php:1.0.1-alpine-prod
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-php-alpine
      #tags: 
      #  - ${CONTAINER_REPO}/ezdev:0.8-node-debian-dev
      args:
        from: *base-alpine-prod-image
      target: php-prod

  node-alpine-dev:
    image: ghcr.io/armando-fandango/ezdev-node:1.0.1-alpine-dev
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-node-alpine
      args:
        from: *base-alpine-dev-image
      target: node-dev

  node-alpine-prod:
    image: ghcr.io/armando-fandango/ezdev-node:1.0.1-alpine-prod
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-node-alpine
      args:
        from: *base-alpine-prod-image
      target: node-prod

  node-debian-dev:
    image: ghcr.io/armando-fandango/ezdev-node:1.0.1-debian-dev
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-node-debian
      #tags: 
      #  - ${CONTAINER_REPO}/ezdev:0.8-node-debian-dev
      args:
        from: *base-debian-dev-image
      target: node-dev

  node-debian-qa:
    image: ghcr.io/armando-fandango/ezdev-node:1.0.1-debian-qa
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-node-debian
      #tags: 
      #  - ${CONTAINER_REPO}/ezdev:0.8-node-debian-dev
      args:
        from: *base-debian-dev-image
      target: node-qa

##### ai images

  py-alpine-dev:
    image: ghcr.io/armando-fandango/ezdev-py:1.1.0-alpine-dev
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-py-alpine
      target: py-dev
      args:
        from: *base-alpine-dev-image

  py-310-debian-dev:
    <<: [*py-command, *common]
    image: ghcr.io/armando-fandango/ezdev-py:2.0.0-310-debian-dev
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-py-debian
      target: py-310-final
      args:
        from: *base-debian-dev-image

  py-312-debian-dev:
    image: ghcr.io/armando-fandango/ezdev-py:2.0.0-312-debian-dev
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-py-debian
      target: py-312-final
      args:
        from: *base-debian-dev-image

  py-mamba-debian-dev:
    image: ghcr.io/armando-fandango/ezdev-py:2.0.0-mamba-debian-dev
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-py-debian
      target: mamba-final
      args:
        from: *base-debian-dev-image

  py-jupyter-alpine-dev:
    image: ghcr.io/armando-fandango/ezdev-py:1.1.0-jupyter-alpine-dev
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-py-alpine
      target: py-jupyter-dev
      args:
        from: *base-alpine-dev-image

  py-310-jupyter-debian-dev:    
    <<: [*py-command, *common]
    ports:
      - "${HOST_JUPYTER_PORT:-8888}:8888"
    image: ghcr.io/armando-fandango/ezdev-py:2.0.0-310-jupyter-debian-dev
    build: 
      context: .
      dockerfile: dockerfiles/py-debian.Dockerfile
      target: py-jupyter
      args:
        from: ghcr.io/armando-fandango/ezdev-py:2.0.0-310-debian-dev

  py-312-jupyter-debian-dev:
    image: ghcr.io/armando-fandango/ezdev-py:2.0.0-312-jupyter-debian-dev
    build: 
      context: .
      dockerfile: dockerfiles/py-debian.Dockerfile
      target: py-jupyter
      args:
        from: ghcr.io/armando-fandango/ezdev-py:2.0.0-312-debian-dev

  py-jupyter-mamba-debian-dev:
    image: ghcr.io/armando-fandango/ezdev-py:2.0.0-jupyter-mamba-debian-dev
    build: 
      context: .
      dockerfile: dockerfiles/py-debian.Dockerfile
      target: mamba-jupyter
      args:
        from: *base-debian-dev-image

  py-jupyter-service-alpine-dev:
    image: ghcr.io/armando-fandango/ezdev-py:1.1.0-jupyter-service-alpine-dev
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-py-alpine
      target: py-jupyter-service-dev
      args:
        from: *base-alpine-dev-image

  py-310-jupyter-service-debian-dev:
    <<: [*py-command, *common]
    ports:
      - "${HOST_JUPYTER_PORT:-8888}:8888"
    image: ghcr.io/armando-fandango/ezdev-py:2.0.0-310-jupyter-service-debian-dev
    build: 
      context: .
      dockerfile: dockerfiles/py-debian.Dockerfile
      target: py-jupyter-service
      args:
        from: ghcr.io/armando-fandango/ezdev-py:2.0.0-310-debian-dev

  py-312-jupyter-service-debian-dev:
    image: ghcr.io/armando-fandango/ezdev-py:2.0.0-312-jupyter-service-debian-dev
    build: 
      context: .
      dockerfile: dockerfiles/py-debian.Dockerfile
      target: py-jupyter-service
      args:
        from: ghcr.io/armando-fandango/ezdev-py:2.0.0-312-debian-dev

  py-jupyter-service-mamba-debian-dev:
    image: ghcr.io/armando-fandango/ezdev-py:2.0.0-jupyter-service-mamba-debian-dev
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-py-debian
      target: mamba-jupyter-service
      args:
        from: *base-debian-dev-image

  #ai-tflm-debian-dev:
  #  image: ghcr.io/armando-fandango/ezdev:0.16-ai-tflm-debian-dev
  #  build: 
  #    context: .
  #    dockerfile: dockerfiles/Dockerfile-ai-debian
  #    target: ai-tflm
  #    args:
  #      from: ghcr.io/armando-fandango/ezdev:0.16-conda-debian-dev

  ai-tflm-debian-dev:
    image: ghcr.io/armando-fandango/ezdev-ai:1.0.2-tflm-debian-dev
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-ai-debian
      target: ai-tflm
      args:
        from: ghcr.io/armando-fandango/ezdev-conda:1.0.2-jupyter-service-debian-dev
  
  ai-iot-tflm-debian-dev:
    image: ghcr.io/armando-fandango/ezdev-ai:1.0.3-iot-tflm-debian-dev
    build: 
      context: .
      dockerfile: dockerfiles/Dockerfile-iot-debian
      args:
        from: ghcr.io/armando-fandango/ezdev-ai:1.0.2-tflm-debian-dev

  ai-fm-py-cpu-debian-dev:
    <<: [*py-command, *common]
    ports:
      - "${HOST_JUPYTER_PORT:-8888}:8888"
    image: ghcr.io/armando-fandango/ezdev-ai:2.0.0-fm-py-cpu-debian-dev
    build: 
      context: .
      dockerfile: dockerfiles/ai-debian.Dockerfile
      target: py-cpu-debian-final
      args:
        from: ghcr.io/armando-fandango/ezdev-py:2.0.0-310-jupyter-service-debian-dev

  ai-fm-py-gpu-debian-dev:
    <<: [*py-command, *common]
    ports:
      - "${HOST_JUPYTER_PORT:-8888}:8888"
    image: ghcr.io/armando-fandango/ezdev-ai:2.0.0-fm-py-gpu-debian-dev
    build: 
      context: .
      dockerfile: dockerfiles/ai-debian.Dockerfile
      target: py-gpu-debian-final
      args:
        from: ghcr.io/armando-fandango/ezdev-py:2.0.0-310-jupyter-service-debian-dev


  
